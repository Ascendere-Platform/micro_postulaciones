name: Deploy to AKS

on:
  workflow_dispatch:
    # Enable manual run
  push:
    branches:
      - main

# env:
#   resourceGroup: "aks-postulacion"
#   kubernetesVersion: "1.20.9"
#   name: "postulacion-ascendere"

jobs:
  push_to_registry:
    name: Push Docker image to Dockerhub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: docker build
        run: docker build -t micro_postulaciones:'${{github.sha}}' .

      - name: docker login
        run: docker login --username '${{secrets.DOCKER_USERNAME}}' --password '${{secrets.DOCKER_PASSWORD}}'

      - name: tag docker image
        run: docker tag micro_postulaciones:'${{github.sha}}' '${{secrets.DOCKER_USERNAME}}'/micro_postulaciones:'${{github.sha}}'

      - name: push docker image
        run: docker push '${{secrets.DOCKER_USERNAME}}'/micro_postulaciones:'${{github.sha}}'

  setup-and-deploy:
    name: Setup and Deploy
    needs: push_to_registry
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1
        with:
          # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          # Resource Group Name
          resource-group: aks-postulacion
          # AKS Cluster Name
          cluster-name: postulacion-ascendere

      # Create K8s secrets to pull images
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v1.1
        with:
          # Container registry url
          container-registry-url: https://index.docker.io/v1/
          # Container registry username
          container-registry-username: "${{ secrets.DOCKER_USERNAME }}"
          # Container registry password
          container-registry-password: "${{ secrets.DOCKER_PASSWORD }}"
          # Type of Kubernetes secret. For example, docker-registry or generic
          secret-type: docker-registry
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: docker-image-pull-secret

      # Deploy to k8s cluster
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1
        with:
          # Path to the manifest files which will be used for deployment.
          manifests: |
            deployment.yml
            service.yml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          images: "${{ secrets.DOCKER_USERNAME }}/micro_postulaciones:${{ github.sha }}"
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: docker-image-pull-secret
          # deploy/promote/reject
          action: deploy
